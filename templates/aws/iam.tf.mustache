# IAM Role & Policy - Teleform Generated
# Generated at: {{timestamp}}

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = var.aws_region
}

# =====================
# VARIABLES
# =====================

variable "aws_region" {
  description = "AWS region"
  type        = string
  default     = "{{awsRegion}}"
}

variable "role_name" {
  description = "IAM role name"
  type        = string
  default     = "{{roleName}}"
}

variable "role_description" {
  description = "IAM role description"
  type        = string
  default     = "{{roleDescription}}"
}

# =====================
# IAM ROLE
# =====================

resource "aws_iam_role" "role" {
  name        = var.role_name
  description = var.role_description

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {{#assumeRolePolicies}}
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          {{#servicePrincipal}}
          Service = "{{servicePrincipal}}"
          {{/servicePrincipal}}
          {{#awsPrincipal}}
          AWS = "{{awsPrincipal}}"
          {{/awsPrincipal}}
        }
      }{{#notLast}},{{/notLast}}
      {{/assumeRolePolicies}}
    ]
  })

  {{#maxSessionDuration}}
  max_session_duration = {{maxSessionDuration}}
  {{/maxSessionDuration}}

  tags = {
    Name      = var.role_name
    {{#tags}}
    {{key}}   = "{{value}}"
    {{/tags}}
    CreatedBy = "Teleform"
    ManagedBy = "Terraform"
  }
}

{{#customPolicies}}
# Custom IAM Policies
{{#policies}}
resource "aws_iam_policy" "{{name}}" {
  name        = "${var.role_name}-{{name}}"
  description = "{{description}}"

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {{#statements}}
      {
        Effect = "{{effect}}"
        Action = [
          {{#actions}}
          "{{.}}"{{#notLast}},{{/notLast}}
          {{/actions}}
        ]
        Resource = [
          {{#resources}}
          "{{.}}"{{#notLast}},{{/notLast}}
          {{/resources}}
        ]
        {{#conditions}}
        Condition = {
          {{#conditionBlocks}}
          "{{type}}" = {
            {{#keyValues}}
            "{{key}}" = "{{value}}"{{#notLast}},{{/notLast}}
            {{/keyValues}}
          }{{#notLast}},{{/notLast}}
          {{/conditionBlocks}}
        }
        {{/conditions}}
      }{{#notLast}},{{/notLast}}
      {{/statements}}
    ]
  })

  tags = {
    Name      = "${var.role_name}-{{name}}"
    CreatedBy = "Teleform"
  }
}

resource "aws_iam_role_policy_attachment" "{{name}}" {
  role       = aws_iam_role.role.name
  policy_arn = aws_iam_policy.{{name}}.arn
}
{{/policies}}
{{/customPolicies}}

{{#managedPolicies}}
# AWS Managed Policy Attachments
{{#policies}}
resource "aws_iam_role_policy_attachment" "managed_{{@index}}" {
  role       = aws_iam_role.role.name
  policy_arn = "{{arn}}"
}
{{/policies}}
{{/managedPolicies}}

{{#createInstanceProfile}}
# Instance Profile for EC2
resource "aws_iam_instance_profile" "profile" {
  name = var.role_name
  role = aws_iam_role.role.name

  tags = {
    Name      = "${var.role_name}-profile"
    CreatedBy = "Teleform"
  }
}
{{/createInstanceProfile}}

# =====================
# OUTPUTS
# =====================

output "role_arn" {
  description = "IAM role ARN"
  value       = aws_iam_role.role.arn
}

output "role_name" {
  description = "IAM role name"
  value       = aws_iam_role.role.name
}

{{#createInstanceProfile}}
output "instance_profile_arn" {
  description = "IAM instance profile ARN"
  value       = aws_iam_instance_profile.profile.arn
}

output "instance_profile_name" {
  description = "IAM instance profile name"
  value       = aws_iam_instance_profile.profile.name
}
{{/createInstanceProfile}}

{{#customPolicies}}
output "custom_policy_arns" {
  description = "Custom policy ARNs"
  value = {
    {{#policies}}
    {{name}} = aws_iam_policy.{{name}}.arn{{#notLast}},{{/notLast}}
    {{/policies}}
  }
}
{{/customPolicies}} 